

-- Практическое задание по теме «Операторы, фильтрация, сортировка и ограничение»

-- задание 1
-- Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.
Select * from users;

update users
  set   created_at = NOW(),
        updated_at = NOW();


-- задание 2
/*
Таблица users была неудачно спроектирована.
Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время помещались значения в формате 20.10.2017 8:10.
Необходимо преобразовать поля к типу DATETIME, сохранив введённые ранее значения.
 */

 DROP TABLE IF EXISTS users;

CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) COMMENT 'Имя Пользователи',
  birthday_at DATE COMMENT 'Дата рождения',
  created_at VARCHAR(255),
  updated_at VARCHAR(255)
) COMMENT = 'Пользователи';


DESCRIBE users;

INSERT INTO
  users (name, birthday_at, created_at, updated_at)
VALUES
  ('Igor', '1989-01-01', '01.01.2020 01:01', '01.01.2020 01:01'),
  ('Alex', '1963-01-01', '01.01.2020 01:01', '01.01.2020 01:01'),
  ('Natali', '1967-01-01', '01.01.2020 01:01', '01.01.2020 01:01');


select * from users;

UPDATE users
SET created_at = STR_TO_DATE(created_at, '%d.%m.%Y %k:%i'),
    updated_at = STR_TO_DATE(updated_at, '%d.%m.%Y %k:%i');

ALTER TABLE
  users
CHANGE
  created_at created_at DATETIME DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE
  users
CHANGE
  updated_at updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

DESCRIBE users;


--  Задание 3
/*
В таблице складских запасов storehouses_products в поле value могут встречаться
самые разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы.
Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value.
Однако нулевые запасы должны выводиться в конце, после всех */


DROP TABLE IF EXISTS storehouses_products;
CREATE TABLE storehouses_products (
  id SERIAL PRIMARY KEY,
  type_id INT UNSIGNED,
  value INT UNSIGNED ,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ;

Select * from storehouses_products;

INSERT INTO
  storehouses_products ( type_id, value)
VALUES
  ( 20, 0),
  ( 314, 22),
  ( 22, 111),
  ( 44, 30);



SELECT
  *
FROM
  storehouses_products
ORDER BY
  value = 0, value;


 -- Практическое задание теме «Агрегация данных»


 -- Задание 1
 -- Подсчитайте средний возраст пользователей в таблице users.
 SELECT AVG(TIMESTAMPDIFF(YEAR, birthday_at, NOW())) FROM users;


-- Задание 2
/*
Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели.
Следует учесть, что необходимы дни недели текущего года, а не года рождения.
*/

SELECT
  DATE_FORMAT(DATE(CONCAT_WS('-', YEAR(NOW()), MONTH(birthday_at), DAY(birthday_at))), '%W') AS day, COUNT(*) AS total
FROM users
GROUP BY day
ORDER BY total DESC;


